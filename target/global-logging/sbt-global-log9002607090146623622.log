[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\s4346\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\s4346\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (AdoptOpenJDK Java 1.8.0_292)
[debug]       Load.loadUnit: plugins took 151.4362ms
[debug]       Load.loadUnit: defsScala took 0.6215ms
[debug] [Loading] Scanning directory C:\Users\s4346\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\s4346\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 32.6125 ms
[debug]           Load.resolveProject(global-plugins) took 86.502ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\s4346\.sbt\1.0\plugins, plugins: List(<none>))) took 170.7179ms
[debug] [Loading] Done in C:\Users\s4346\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 209.7717ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5964ms
[debug]     Load.loadUnit(file:/C:/Users/s4346/.sbt/1.0/plugins/, ...) took 374.6366ms
[debug]   Load.apply: load took 655.5125ms
[debug]   Load.apply: resolveProjects took 9.3383ms
[debug]   Load.apply: finalTransforms took 104.0762ms
[debug]   Load.apply: config.delegates took 17.7021ms
[debug]   Load.apply: Def.make(settings)... took 671.0205ms
[debug]   Load.apply: structureIndex took 163.4631ms
[debug]   Load.apply: mkStreams took 3.6985ms
[info] loading global plugins from C:\Users\s4346\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3964.6118ms
[debug]           Load.loadUnit: plugins took 50.8688ms
[debug]           Load.loadUnit: defsScala took 0.0069ms
[debug] [Loading] Scanning directory C:\Users\s4346\OneDrive\Documents\Revature\Spark\p1\project
[debug]             Load.loadUnit: mkEval took 13.6263ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\s4346\OneDrive\Documents\Revature\Spark\p1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.4173 ms
[info] loading settings for project p1-build from idea.sbt ...
[debug]               Load.resolveProject(p1-build) took 4.0798ms
[debug]             Load.loadTransitive: finalizeProject(Project(id p1-build, base: C:\Users\s4346\OneDrive\Documents\Revature\Spark\p1\project, plugins: List(<none>))) took 9.4101ms
[debug] [Loading] Done in C:\Users\s4346\OneDrive\Documents\Revature\Spark\p1\project, returning: (p1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3616.3909ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.5811ms
[debug]         Load.loadUnit(file:/C:/Users/s4346/OneDrive/Documents/Revature/Spark/p1/project/, ...) took 3675.6185ms
[debug]       Load.apply: load took 3677.8301ms
[debug]       Load.apply: resolveProjects took 0.4ms
[debug]       Load.apply: finalTransforms took 12.5503ms
[debug]       Load.apply: config.delegates took 0.4593ms
[debug]       Load.apply: Def.make(settings)... took 93.8054ms
[debug]       Load.apply: structureIndex took 35.7922ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Users\s4346\OneDrive\Documents\Revature\Spark\p1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6217.3974ms
[debug]     Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\s4346\OneDrive\Documents\Revature\Spark\p1
[debug]       Load.loadUnit: mkEval took 0.4099ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\s4346\OneDrive\Documents\Revature\Spark\p1, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.23 ms
[info] loading settings for project p1 from build.sbt ...
[debug]         Load.resolveProject(p1) took 51.6861ms
[debug]       Load.loadTransitive: finalizeProject(Project(id p1, base: C:\Users\s4346\OneDrive\Documents\Revature\Spark\p1, plugins: List(<none>))) took 56.6617ms
[debug] [Loading] Done in C:\Users\s4346\OneDrive\Documents\Revature\Spark\p1, returning: (p1)
[debug]     Load.loadUnit: loadedProjectsRaw took 2263.2627ms
[debug]     Load.loadUnit: cleanEvalClasses took 27.3116ms
[debug]   Load.loadUnit(file:/C:/Users/s4346/OneDrive/Documents/Revature/Spark/p1/, ...) took 8508.9274ms
[debug] Load.apply: load took 8511.5832ms
[debug] Load.apply: resolveProjects took 0.1641ms
[debug] Load.apply: finalTransforms took 42.1532ms
[debug] Load.apply: config.delegates took 0.4708ms
[debug] Load.apply: Def.make(settings)... took 148.2922ms
[debug] Load.apply: structureIndex took 33.7088ms
[debug] Load.apply: mkStreams took 0.0046ms
[info] set current project to untitled1 (in build file:/C:/Users/s4346/OneDrive/Documents/Revature/Spark/p1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62471 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62471, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled1 (in build file:/C:/Users/s4346/OneDrive/Documents/Revature/Spark/p1/)
[debug] > Exec(idea-shell, None, None)
